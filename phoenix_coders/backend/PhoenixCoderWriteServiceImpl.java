package io.terminus.doctor.basic.service;

import com.google.common.base.Throwables;
import io.terminus.boot.rpc.common.annotation.RpcProvider;
import io.terminus.common.model.Response;
import io.terminus.doctor.basic.dao.PhoenixCoderDao;
import io.terminus.doctor.basic.model.PhoenixCoder;
import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

/**
 * Code generated by CodeGen
 * Desc: 程序员表写服务实现类
 * Date: 2016-11-23
 */
@Slf4j
@Service
@RpcProvider
public class PhoenixCoderWriteServiceImpl implements PhoenixCoderWriteService {

    private final PhoenixCoderDao phoenixCoderDao;

    @Autowired
    public PhoenixCoderWriteServiceImpl(PhoenixCoderDao phoenixCoderDao) {
        this.phoenixCoderDao = phoenixCoderDao;
    }

    @Override
    public Response<Long> createCoder(PhoenixCoder coder) {
        try {
            phoenixCoderDao.create(coder);
            return Response.ok(coder.getId());
        } catch (Exception e) {
            log.error("create coder failed, coder:{}, cause:{}", coder, Throwables.getStackTraceAsString(e));
            return Response.fail("coder.create.fail");
        }
    }

    @Override
    public Response<Boolean> updateCoder(PhoenixCoder coder) {
        try {
            return Response.ok(phoenixCoderDao.update(coder));
        } catch (Exception e) {
            log.error("update coder failed, coder:{}, cause:{}", coder, Throwables.getStackTraceAsString(e));
            return Response.fail("coder.update.fail");
        }
    }

    @Override
    public Response<Boolean> deleteCoderById(Long coderId) {
        try {
            return Response.ok(phoenixCoderDao.delete(coderId));
        } catch (Exception e) {
            log.error("delete coder failed, coderId:{}, cause:{}", coderId, Throwables.getStackTraceAsString(e));
            return Response.fail("coder.delete.fail");
        }
    }
}
