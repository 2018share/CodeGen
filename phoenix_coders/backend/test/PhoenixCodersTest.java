package io.terminus.doctor.basic.front;

import com.google.common.collect.ImmutableMap;
import io.terminus.common.model.Paging;
import io.terminus.doctor.basic.model.PhoenixCoder;
import org.junit.Before;
import org.junit.Test;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.assertNull;
import static org.junit.Assert.assertTrue;

/**
 * Code generated by CodeGen
 * Desc: 程序员表Controller测试类
 * Date: 2016-11-23
 */
public class PhoenixCoderTest extends BaseWebTest {

    private PhoenixCoder coder;

    @Before
    public void setUp() {
        String url = "/api/coder/id";
        coder = makeCoder();

        ResponseEntity<Long> createResult = postForEntity(url, coder, Long.class);
        assertEquals(createResult.getStatusCode(), HttpStatus.OK);
        coder.setId(createResult.getBody());
    }

    @Test
    public void testFindCoderById() {
        PhoenixCoder exceptedCoder = findCoderById(coder.getId());
        assertNotNull(exceptedCoder);
    }

    @Test
    public void testCreateOrUpdateCoder() {
        String url = "/api/coder";

        //创建
        ResponseEntity<Long> createResult = postForEntity(url, makeCoder(), Long.class);
        assertEquals(createResult.getStatusCode(), HttpStatus.OK);

        PhoenixCoder createCoder = findCoderById(createResult.getBody());
        assertNotNull(createCoder);

        //更新
        createCoder.setName("Name");
        createCoder.setMobile("Mobile");
        createCoder.setType(2);
        
        
        ResponseEntity<Long> updateResult = postForEntity(url, createCoder, Long.class);
        assertEquals(updateResult.getStatusCode(), HttpStatus.OK);

        PhoenixCoder updateCoder = findCoderById(createCoder.getId());
        assertEquals(updateCoder.getName(), createCoder.getName());
        assertEquals(updateCoder.getMobile(), createCoder.getMobile());
        assertEquals(updateCoder.getType(), createCoder.getType());
        
        
        
    }

    @Test
    public void testDeleteCoderById() {
        String url = "/api/coder/delete";
        postFormForEntity(url, ImmutableMap.of("coderId", coder.getId(), Boolean.class);

        PhoenixCoder deleteCoder = findCoderById(coder.getId());
        assertNull(deleteCoder);
    }

    @Test
    public void testPagingCoder() {
        String url = "/api/coder/paging";
        ResponseEntity<Paging> result = getForEntity(url, ImmutableMap.of("pageNo", 1, "size", 20), Paging.class);
        assertEquals(result.getStatusCode(), HttpStatus.OK);
        assertTrue(result.getBody().getTotal() > 0);
    }

    private PhoenixCoder findCoderById(Long coderId) {
        String url = "/api/coder/id";
        ResponseEntity<PhoenixCoder> result = getForEntity(url, ImmutableMap.of("coderId", coderId), PhoenixCoder.class);
        assertEquals(result.getStatusCode(), HttpStatus.OK);
        return result.getBody();
    }

    private PhoenixCoder makeCoder() {
        PhoenixCoder coder = new PhoenixCoder();
        coder.setName("name");
        coder.setMobile("mobile");
        coder.setType(1);
        
        
        return coder;
    }
}
