package io.terminus.doctor.basic.dao;

import com.google.common.collect.Lists;
import com.google.common.collect.Maps;
import io.terminus.common.model.Paging;
import io.terminus.doctor.basic.model.PhoenixCoder;
import org.joda.time.DateTime;
import org.junit.Before;
import org.junit.Test;
import org.springframework.beans.factory.annotation.Autowired;

import java.util.Date;
import java.util.List;
import java.util.Map;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.assertNull;
import static org.junit.Assert.assertTrue;

/**
 * Code generated by CodeGen
 * Desc: 程序员表Dao测试类
 * Date: 2016-11-23
 */
public class PhoenixCoderDaoTest extends BaseDaoTest {

    @Autowired
    private PhoenixCoderDao phoenixCoderDao;

    private PhoenixCoder coder;

    @Before
    public void setUp() {
        coder = make();
        phoenixCoderDao.create(coder);
        assertNotNull(coder.getId());
    }

    @Test
    public void testCreates() {
        int beforeCoder = phoenixCoderDao.listAll().size();
        phoenixCoderDao.creates(Lists.newArrayList(make(), make(), make()));
        int afterCoder = phoenixCoderDao.listAll().size();
        assertEquals(afterCoder - beforeCoder, 3);
    }

    @Test
    public void testFindById() {
        PhoenixCoder expectedCoder = phoenixCoderDao.findById(coder.getId());
        assertNotNull(expectedCoder);
    }

    @Test
    public void testUpdate() {
        PhoenixCoder expectedCoder = new PhoenixCoder();
        expectedCoder.setId(coder.getId());

        expectedCoder.setName("Name");
        expectedCoder.setMobile("Mobile");
        expectedCoder.setType(2);
        
        
        phoenixCoderDao.update(expectedCoder);
        PhoenixCoder actualCoder = phoenixCoderDao.findById(coder.getId());

        assertEquals(actualCoder.getName(), expectedCoder.getName());
        assertEquals(actualCoder.getMobile(), expectedCoder.getMobile());
        assertEquals(actualCoder.getType(), expectedCoder.getType());
        
        
        
    }

    @Test
    public void testDelete() {
        phoenixCoderDao.delete(coder.getId());
        PhoenixCoder expectedCoder = phoenixCoderDao.findById(coder.getId());
        assertNull(expectedCoder);
    }

    @Test
    public void testListAll() {
        List<PhoenixCoder> coderList = phoenixCoderDao.listAll();
        assertTrue(coderList.size() > 0);
    }

    @Test
    public void testPaging() {
        Map<String, Object> map = Maps.newHashMap();
        Paging<PhoenixCoder> coderPaging = phoenixCoderDao.paging(0, 20, map);
        assertTrue(coderPaging.getTotal() > 0 && coderPaging.getTotal() <= 20);
        assertTrue(!coderPaging.getData().isEmpty());
    }

    private PhoenixCoder make() {
        PhoenixCoder coder = new PhoenixCoder();
        coder.setName("name");
        coder.setMobile("mobile");
        coder.setType(1);
        
        
        return coder;
    }
}
